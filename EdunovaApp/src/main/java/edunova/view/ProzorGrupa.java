/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package edunova.view;

import com.github.lgooddatepicker.components.DatePickerSettings;
import edunova.controller.ObradaGrupa;
import edunova.controller.ObradaPolaznik;
import edunova.controller.ObradaPredavac;
import edunova.controller.ObradaSmjer;
import edunova.model.Clan;
import edunova.model.Grupa;
import edunova.model.Polaznik;
import edunova.model.Smjer;
import edunova.model.Predavac;
import edunova.util.EdunovaException;
import edunova.util.Pomocno;
import java.awt.event.KeyEvent;
import java.time.LocalDate;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author dell
 */
public class ProzorGrupa extends javax.swing.JFrame {

    private ObradaGrupa obrada;
    private ObradaPolaznik obradaPolaznik;

    /**
     * Creates new form ProzorGrupa
     */
    public ProzorGrupa() {
        initComponents();
        obrada = new ObradaGrupa();
        obradaPolaznik = new ObradaPolaznik();
        postavke();
        ucitaj();
    }

    private void postavke() {
        setTitle(Pomocno.NAZIV_APLIKACIJE
                + " Grupe");
        ucitajSmjerove();
        ucitajPredavace();
        prilagodiDatePicker();
        lstClanoviGrupe.setModel(new DefaultListModel<>());
    }

    private void prilagodiDatePicker() {
        DatePickerSettings dps
                = new DatePickerSettings(new Locale("hr", "HR"));
        dps.setFormatForDatesCommonEra(Pomocno.FORMAT_DATUMA);
        dps.setTranslationClear("Očisti");
        dps.setTranslationToday("Danas");
        dpDatumPocetka.setSettings(dps);
    }

    private void ucitajSmjerove() {
        DefaultComboBoxModel<Smjer> m
                = new DefaultComboBoxModel<>();
        m.addAll(new ObradaSmjer().read());
        cmbSmjerovi.setModel(m);
    }

    private void ucitajPredavace() {
        DefaultComboBoxModel<Predavac> mp
                = new DefaultComboBoxModel<>();
        mp.addAll(new ObradaPredavac().read());
        cmbPredavaci.setModel(mp);
    }

    private void ucitaj() {
        // implementirati https://www.codejava.net/java-se/swing/jlist-custom-renderer-example
        lstEntiteti.setModel(
                new EdunovaListModel<>(obrada.read())
        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstEntiteti = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        txtNaziv = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbSmjerovi = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmbPredavaci = new javax.swing.JComboBox<>();
        dpDatumPocetka = new com.github.lgooddatepicker.components.DatePicker();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtMaksimalnoPolaznika = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstClanoviGrupe = new javax.swing.JList<>();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        taNapomena = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        lstPolazniciUBazi = new javax.swing.JList<>();
        txtUvjet = new javax.swing.JTextField();
        btnTraziPolaznika = new javax.swing.JButton();
        btnDodajPolaznike = new javax.swing.JButton();
        btnObrisiPolaznike = new javax.swing.JButton();
        btnPromjeni = new javax.swing.JButton();
        btnDodaj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        lstEntiteti.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstEntiteti.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstEntitetiValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstEntiteti);

        jLabel1.setText("Naziv");

        jLabel2.setText("Smjer");

        jLabel3.setText("Predavač");

        jLabel4.setText("Datum početka");

        jLabel5.setText("Maksimalno polaznika");

        lstClanoviGrupe.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lstClanoviGrupeKeyPressed(evt);
            }
        });
        lstClanoviGrupe.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstClanoviGrupeValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstClanoviGrupe);

        jLabel6.setText("Polaznici na grupi");

        taNapomena.setColumns(20);
        taNapomena.setRows(5);
        taNapomena.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                taNapomenaKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(taNapomena);

        jLabel7.setText("Napomena odabranog polaznika");

        jLabel8.setText("Polaznici u školi");

        lstPolazniciUBazi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lstPolazniciUBaziMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(lstPolazniciUBazi);

        txtUvjet.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUvjetKeyPressed(evt);
            }
        });

        btnTraziPolaznika.setText("Traži");
        btnTraziPolaznika.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTraziPolaznikaActionPerformed(evt);
            }
        });

        btnDodajPolaznike.setText("<");
        btnDodajPolaznike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajPolaznikeActionPerformed(evt);
            }
        });

        btnObrisiPolaznike.setText(">");
        btnObrisiPolaznike.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiPolaznikeActionPerformed(evt);
            }
        });

        btnPromjeni.setText("Promjeni");
        btnPromjeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPromjeniActionPerformed(evt);
            }
        });

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obriši");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(dpDatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtMaksimalnoPolaznika, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel1)
                        .addComponent(txtNaziv)
                        .addComponent(jLabel2)
                        .addComponent(cmbSmjerovi, 0, 266, Short.MAX_VALUE))
                    .addComponent(jLabel3)
                    .addComponent(cmbPredavaci, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(73, 73, 73)
                        .addComponent(jLabel5))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodaj)
                        .addGap(18, 18, 18)
                        .addComponent(btnPromjeni, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnObrisi)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 178, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnDodajPolaznike, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE)
                                    .addComponent(btnObrisiPolaznike, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtUvjet)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(btnTraziPolaznika, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(149, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtUvjet, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnTraziPolaznika))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(btnDodajPolaznike)
                                        .addGap(26, 26, 26)
                                        .addComponent(btnObrisiPolaznike)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(txtNaziv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbSmjerovi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbPredavaci, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(7, 7, 7)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(dpDatumPocetka, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaksimalnoPolaznika, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel7)
                        .addGap(2, 2, 2)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(3, 3, 3)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(btnDodaj)
                                    .addComponent(btnPromjeni)
                                    .addComponent(btnObrisi)))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(59, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void lstEntitetiValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstEntitetiValueChanged
        if (evt.getValueIsAdjusting()
                || lstEntiteti.getSelectedValue() == null) {
            return;
        }
        obrada.setEntitet(lstEntiteti.getSelectedValue());
        popuniView();
    }//GEN-LAST:event_lstEntitetiValueChanged

    private void lstClanoviGrupeValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstClanoviGrupeValueChanged
        if (evt.getValueIsAdjusting()
                || lstClanoviGrupe.getSelectedValue() == null) {
            return;
        }

        taNapomena.setText(
                lstClanoviGrupe
                        .getSelectedValue()
                        .getNapomena()
        );

    }//GEN-LAST:event_lstClanoviGrupeValueChanged

    private void taNapomenaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_taNapomenaKeyTyped
        if (lstClanoviGrupe.getSelectedValue() == null) {
            return;
        }
        var s = taNapomena.getText()
                + evt.getKeyChar();
//       for(int i=0;i<s.length();i++){
//           System.out.println((int)s.charAt(i) + ": " +
//                   s.charAt(i));
//       }
        s = s.replace((char) 22, (char) 0);
        lstClanoviGrupe
                .getSelectedValue()
                .setNapomena(s);
    }//GEN-LAST:event_taNapomenaKeyTyped

    private void btnTraziPolaznikaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTraziPolaznikaActionPerformed
        // loše
        /*
        DefaultListModel<Polaznik> m = new DefaultListModel<>();
        
        for(Polaznik p : obradaPolaznik.read()){
            if(p.toString().toLowerCase()
                    .contains(txtUvjet.getText().toLowerCase())){
                m.addElement(p);
            }
        }
        
       
        lstPolazniciUBazi.setModel(m);
         */

        lstPolazniciUBazi.setModel(
                new EdunovaListModel<>(obradaPolaznik
                        .read(txtUvjet.getText().trim()))
        );
        try {
            lstPolazniciUBazi.setSelectedIndex(0);
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnTraziPolaznikaActionPerformed

    private void btnDodajPolaznikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajPolaznikeActionPerformed

        DefaultListModel<Clan> m
                = (DefaultListModel<Clan>) lstClanoviGrupe.getModel();
       
        for (Polaznik p : 
                lstPolazniciUBazi.getSelectedValuesList()) {
            m.addElement(
                    kreirajClana(obrada.getEntitet(), p, ""));
        }
        lstClanoviGrupe.repaint();

    }//GEN-LAST:event_btnDodajPolaznikeActionPerformed

    private Clan kreirajClana(Grupa g, Polaznik p, String n) {
        Clan c = new Clan();
        c.setGrupa(g);
        c.setPolaznik(p);
        c.setNapomena(n);
        return c;
    }

    private void btnObrisiPolaznikeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiPolaznikeActionPerformed
        DefaultListModel<Clan> m
                = (DefaultListModel<Clan>) lstClanoviGrupe.getModel();
        for (Clan c : lstClanoviGrupe.getSelectedValuesList()) {
            m.removeElement(c);
        }
        lstClanoviGrupe.repaint();
    }//GEN-LAST:event_btnObrisiPolaznikeActionPerformed

    private void btnPromjeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPromjeniActionPerformed
        if (obrada.getEntitet() == null) {
            JOptionPane.showMessageDialog(rootPane, 
                    "Prvo odaberite grupu");
            return;
        }

        popuniModel();

        try {
            obrada.update();
            ucitaj();
        } catch (EdunovaException e) {
            JOptionPane.showMessageDialog(rootPane,
                    e.getPoruka());
        }

    }//GEN-LAST:event_btnPromjeniActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        obrada.setEntitet(new Grupa());
        popuniModel();
        try {
            obrada.create();
            ucitaj();
        } catch (EdunovaException e) {
            JOptionPane.showMessageDialog(rootPane,
                    e.getPoruka());
        }
    }//GEN-LAST:event_btnDodajActionPerformed

    private void lstPolazniciUBaziMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lstPolazniciUBaziMouseClicked
        if (evt.getClickCount() != 2) {
            return;
        }
       dodajClana();
       
    }//GEN-LAST:event_lstPolazniciUBaziMouseClicked

    private void dodajClana(){
        
        DefaultListModel<Clan> clanovi = (DefaultListModel<Clan>) lstClanoviGrupe.getModel();
        
        for(int i=0;i<clanovi.getSize();i++){
            if(clanovi.get(i).getPolaznik().getSifra().equals(
                    lstPolazniciUBazi.getSelectedValue().getSifra())){
                JOptionPane.showMessageDialog(rootPane, 
                        "Polaznik je već dodan na grupu");
                return;
            }
        }
        
         DefaultListModel<Clan> m = (DefaultListModel<Clan>) lstClanoviGrupe.getModel();
        m.addElement(kreirajClana(obrada.getEntitet(), lstPolazniciUBazi.getSelectedValue(), ""));
        txtUvjet.requestFocus();
        txtUvjet.selectAll();
    }
    
    private void txtUvjetKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUvjetKeyPressed
        if(evt.getKeyCode()!=KeyEvent.VK_ENTER){
            return;
        }
        btnTraziPolaznikaActionPerformed(null);
        lstClanoviGrupe.requestFocus();
    }//GEN-LAST:event_txtUvjetKeyPressed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
       if (obrada.getEntitet() == null) {
            JOptionPane.showMessageDialog(rootPane, 
                    "Prvo odaberite grupu");
            return;
        }
       
       popuniModel();
       
        try {
            obrada.delete();
            pocistiView();
            ucitaj();
        } catch (EdunovaException e) {
            JOptionPane.showMessageDialog(rootPane,
                    e.getPoruka());
        }
       
       
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void lstClanoviGrupeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lstClanoviGrupeKeyPressed
        if(evt.getKeyCode()!=KeyEvent.VK_ENTER){
            return;
        }
        dodajClana();
    }//GEN-LAST:event_lstClanoviGrupeKeyPressed

    private void pocistiView(){
        txtNaziv.setText("");
        cmbPredavaci.setSelectedItem(null);
        cmbSmjerovi.setSelectedItem(null);
        dpDatumPocetka.setDate(null);
        txtMaksimalnoPolaznika.setText("");
        taNapomena.setText("");
    }
    
    private void popuniView() {
        var e = obrada.getEntitet();
        txtNaziv.setText(e.getNaziv());
        cmbSmjerovi.setSelectedItem(e.getSmjer());
        cmbPredavaci.setSelectedItem(e.getPredavac());

        // ovo nakucati oneliner
        Date input = e.getDatumPocetka();
        LocalDate date = input.toInstant()
                .atZone(ZoneId.systemDefault()).toLocalDate();
        dpDatumPocetka.setDate(date);

        txtMaksimalnoPolaznika.setText(String.valueOf(e.getMaksimalnoPolaznika()));

        lstClanoviGrupe.setModel(
                new EdunovaListModel<>(e.getClanovi())
        );

    }

    private void popuniModel() {
        var e = obrada.getEntitet();
        e.setNaziv(txtNaziv.getText());
        e.setSmjer((Smjer) cmbSmjerovi.getSelectedItem());
        e.setPredavac((Predavac) cmbPredavaci.getSelectedItem());
        e.setDatumPocetka(dpDatumPocetka.getDate() != null
                ? Date.from(dpDatumPocetka.getDate()
                        .atStartOfDay()
                        .atZone(ZoneId.systemDefault())
                        .toInstant()
                ) : null
        );
        try {
            e.setMaksimalnoPolaznika(
                    Integer.parseInt(
                            txtMaksimalnoPolaznika.getText()
                    ));
        } catch (Exception ex) {
            e.setMaksimalnoPolaznika(0);
        }

        DefaultListModel<Clan> m
                = (DefaultListModel<Clan>) lstClanoviGrupe.getModel();

        List<Clan> noviClanovi = new ArrayList<>();
        for (int i = 0; i < m.getSize(); i++) {
            noviClanovi.add(m.getElementAt(i));
        }
        obrada.setNoviClanovi(noviClanovi);

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnDodajPolaznike;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnObrisiPolaznike;
    private javax.swing.JButton btnPromjeni;
    private javax.swing.JButton btnTraziPolaznika;
    private javax.swing.JComboBox<Predavac> cmbPredavaci;
    private javax.swing.JComboBox<Smjer> cmbSmjerovi;
    private com.github.lgooddatepicker.components.DatePicker dpDatumPocetka;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList<Clan> lstClanoviGrupe;
    private javax.swing.JList<Grupa> lstEntiteti;
    private javax.swing.JList<Polaznik> lstPolazniciUBazi;
    private javax.swing.JTextArea taNapomena;
    private javax.swing.JTextField txtMaksimalnoPolaznika;
    private javax.swing.JTextField txtNaziv;
    private javax.swing.JTextField txtUvjet;
    // End of variables declaration//GEN-END:variables
}
